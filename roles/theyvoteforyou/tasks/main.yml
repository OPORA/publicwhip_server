---
- include_vars: encrypted.yml

- name: Ensure that deploy owns /srv/www and /srv/www/shared
  file:
    state: directory
    owner: deploy
    group: deploy
    path: '{{item}}'
  with_items:
    - /srv/www
    - /srv/www/shared

- name: Copy application configuration files
  copy:
    src: "{{item}}"
    dest: /srv/www/shared/config/
    owner: deploy
    group: deploy
  with_items:
    - database.yml
    - settings.yml
  notify: nginx reload

- name: Copy application configuration templates
  template:
    src: "{{item}}"
    dest: /srv/www/shared/config/
    owner: deploy
    group: deploy
  with_items:
    - secrets.yml
    - newrelic.yml
  notify: nginx reload

- name: Ensure packages to build gem native extensions are installed
  apt:
    pkg: "{{item}}"
  with_items:
    - libmysqlclient-dev

- name: Copy SSL certificates
  copy:
    src: "{{ item }}"
    dest: /etc/ssl/
    owner: root
    group: root
    mode: 0644
  with_items:
    - theyvoteforyou.org.au.dev.pem
    - tvfy-ukraine.oaf.org.au.pem # TODO: Replace with real one
  notify: nginx reload

- name: Copy self-signed development SSL key
  copy:
    content: "{{ development_ssl_key }}"
    dest: /etc/ssl/private/theyvoteforyou.org.au.dev.key
    owner: root
    group: ssl-cert
    mode: 0640
  notify: nginx reload

# TODO: Replace with real one
- name: Copy production SSL key
  copy:
    content: "{{ production_ssl_key }}"
    dest: /etc/ssl/private/tvfy-ukraine.oaf.org.au.key
    owner: root
    group: ssl-cert
    mode: 0640
  notify: nginx reload

- name: Copy test/test password
  copy:
    src: htpasswd
    dest: /etc/nginx/
  notify: nginx restart

- name: Copy nginx main configuration
  copy:
    src: nginx.conf
    dest: /etc/nginx/
  notify: nginx restart

- name: Copy nginx site configuration
  copy:
    src: default
    dest: /etc/nginx/sites-available/
  notify: nginx reload

- name: Allow deploy user to control application services
  copy:
    src: theyvoteforyou_foreman
    dest: /etc/sudoers.d/
  notify: sudo reload

# TODO
# - name: Set up daily load cron job
#   cron:
#     name: theyvoteforyou_application_load_daily
#     user: deploy
#     hour: 9
#     minute: 15
#     weekday: 1-5
#     job: "cd /srv/www/current && /usr/local/bin/bundle exec rake application:load:daily RAILS_ENV=production"
